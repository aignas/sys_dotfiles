# This is made to work with mutt and as a daemon
# Â© Ignas Anikevicius

#{{{ General
[general]
# NOTE: cronjob calls the quiet UI with -u
ui = basic
accounts = gmail,hermes
maxsyncaccounts = 2

# This is found on https://dev.gentoo.org/~tomka/mail.html
pythonfile=~/bin/offlineimap-helpers.py
#}}}
#{{{ Gmail config
[Account gmail]
localrepository = gmail-local
remoterepository = gmail-remote
autorefresh = 5
quick = 30
status_backend = sqlite

[Repository gmail-local]
type = Maildir
sep = .
localfolders = ~/Mail/gmail
restoreatime = no
maxconnections = 8
nametrans = lambda foldername: re.sub ( 'GM', '[Google Mail]', foldername )
folderfilter = lambda folder: folder not in 'GM.All Mail'
idlefolders = [ 'INBOX' ]

[Repository gmail-remote]
type = Gmail
sep = /
remoteusereval = get_username("imap.gmail.com")
remotepasseval = get_password("imap.gmail.com")
cert_fingerprint = 6d1b5b5ee0180ab493b71d3b94534b5ab937d042
realdelete = no
keepalive = 60
maxconnections = 8
nametrans = lambda foldername: re.sub ( '^\[Google Mail\]', 'GM', foldername )
idlefolders = [ 'INBOX' ]

#}}}
#{{{ Hermes config
[Account hermes]
localrepository = hermes-local
remoterepository = hermes-remote
autorefresh = 5
quick = 30
status_backend = sqlite

[Repository hermes-local]
type = Maildir
sep = .
localfolders = ~/Mail/hermes
restoreatime = no
maxconnections = 8

[Repository hermes-remote]
type = IMAP
remotehost = imap.hermes.cam.ac.uk
remoteusereval = get_username("imap.hermes.cam.ac.uk")
remotepasseval = get_password("imap.hermes.cam.ac.uk")
realdelete = no
keepalive = 60
maxconnections = 8
#}}}
#{{{ Mutt stuff
[mbnames]
enabled = yes
filename = ~/.mutt/mailboxes
header = "mailboxes "
peritem = "+%(accountname)s/%(foldername)s"
sep = " "
footer = "\n"
#}}}

# vim: ft=cfg tw=0 fdm=marker
