ccopy_reg
_reconstructor
p1
(ccanto.feedparser_builtin
FeedParserDict
p2
c__builtin__
dict
p3
(dp4
S'feed'
p5
g1
(g2
g3
(dp6
S'title_detail'
p7
g1
(g2
g3
(dp8
S'base'
p9
S'http://codezen.org/canto/feeds/latest'
p10
sS'type'
p11
S'text/plain'
p12
sS'language'
p13
NsS'value'
p14
VCanto RSS
p15
stRp16
sS'subtitle'
p17
VCanto News
p18
sS'links'
p19
(lp20
g1
(g2
g3
(dp21
S'href'
p22
Vhttp://codezen.org/static/canto.xml
p23
sg11
S'text/html'
p24
sS'rel'
p25
S'alternate'
p26
stRp27
asS'title'
p28
g15
sS'link'
p29
g23
sS'subtitle_detail'
p30
g1
(g2
g3
(dp31
g9
S'http://codezen.org/canto/feeds/latest'
p32
sg11
S'text/html'
p33
sg13
Nsg14
g18
stRp34
stRp35
sS'status'
p36
I200
sS'updated'
p37
ctime
struct_time
p38
((I2010
I7
I27
I19
I32
I42
I1
I208
I0
t(dtRp39
sS'encoding'
p40
S'utf-8'
p41
sS'bozo'
p42
I0
sS'entries'
p43
(lp44
g1
(g2
g3
(dp45
S'summary_detail'
p46
g1
(g2
g3
(dp47
g9
S'http://codezen.org/canto/feeds/latest'
p48
sg11
S'text/html'
p49
sg13
Nsg14
V<p>You can grab the 0.7.10 release from the \u000a<a href="http://codezen.org/canto/download/">download</a> page.</p>\u000a<ul>\u000a<li>Add canto-inspect.1 manpage</li>\u000a<li>Fix other manpages</li>\u000a<li>Fix some 2.6 incompatible abuse</li>\u000a<li>Add workaround for bad feed data caused by switching between\u000a    the system feedparser and the builtin.</li>\u000a</ul>\u000a<p>This is basically a maintenance release, mostly thanks to Canto having a new\u000aDebian maintainer (thanks Vincent!). Essentially some immaterial cleanups that\u000awon't make a difference to most. Some better Python practices (particularly\u000astring exceptions that apparently have always been buggy and now are not\u000asupported int 2.6+).</p>\u000a<p>I would like this to be the last 0.7.x release, and thus consider it to be in\u000amaintenance mode. <code>xulos</code> and <code>jaacoppi</code> from IRC still have some nasty bugs,\u000abut try as I might I can't get them to reproduce. Resolving these bugs would be\u000athe only thing that would prompt an 0.7.11 release.</p>\u000a<h3 id="080-plans">0.8.0 Plans</h3>\u000a<p>So, as I've mentioned before, Canto was basically the first piece of Python that\u000aI wrote. I've learned everything I know about Python from building it and every\u000aversion from 0.4.1 to this latest 0.7.10 has been organically grown from the\u000asame codebase.</p>\u000a<p>As a result 0.7.10 is about 30% a product of the beginner Pythonista I <em>was</em>,\u000a50% the result of the intermediate Pythonista I came to be not recognizing the\u000apoor design, and 20% of the expert Pythonista I am now thrashing to salvage\u000aanything.</p>\u000a<p>Now I reached the point where I stopped thrashing, evaluated the codebase on its\u000amerits versus the amount of effort to start again and found that, easily, it\u000amade more sense to start from scratch.</p>\u000a<p>0.7.x evolved into a multi-process monster with <code>canto-fetch</code> flying around in a\u000acronjob. Its insides were twisted around to communicate with a gimpy form of\u000aPython only picklable socket protocol. The dividing line between work that\u000aneeded to be done in the interface and needed to be done in the backend was\u000ablurry and information that needed to cross the boundary ill-defined.</p>\u000a<p>In short, it became a huge mess, but that's what happens when you start with the\u000aidea of threading and (through necessity, thanks to the Python GIL) end-up with\u000aprocesses. Among other bad choices.</p>\u000a<p>0.8.0 rectifies the situation.</p>\u000a<p>Instead of a hideously twisted gimp protocol of 0.7.x, a real, genuine socket\u000aprotocol is being used to communicate with a (<em>gasp!</em>) daemon. Because the\u000adaemon exists, <code>canto-fetch</code> is history. As are slow exits, bouncing CPU usage,\u000aconfusing macro systems, eye glazing Python based configs, pointless lock\u000ahammering on the filesystem, delayed updates, and lost information.</p>\u000a<p>Most of the heavy lifting is done in the daemon, which is properly\u000amulti-threaded such that multiple clients could be running at once and\u000acooperate. Not only that, but because it uses a simple text based protocol\u000a(instead of Python-only pickles), it would be trivial to write a GTK or a Qt\u000abased frontend to canto and still take advantage of its filters, sorts and other\u000aconfiguration all in any language that's smart enough to talk to a socket (read:\u000aall of them).</p>\u000a<p>0.8.0 will be a great simplification.</p>\u000a<h3 id="current-status">Current Status</h3>\u000a<p>As of this writing, I have about half of the server functionality complete and\u000aabout a third (although it's the <em>hard</em> third) of the client done. Neither are\u000aup yet for public consumption, but as soon as I start giving IRC users alphas,\u000athere will be another post and the project will appear in the usual gitweb.</p>\u000a<p>I'm not sure how long it will take for that to happen, but I'm hoping to put out\u000athe initial 0.8.0 release before the end of the year (loose enough timeline for\u000ayou?).</p>\u000a<p>A short list of notable changes:</p>\u000a<ul>\u000a<li>\u000a<p>Server / client (as mentioned above).</p>\u000a</li>\u000a<li>\u000a<p>Blocking event-based architecture = 0% CPU usage when not in use.</p>\u000a</li>\u000a<li>\u000a<p>INI style config, that can be machine manipulated. (Although Python \u000a    extension will be worked in.)</p>\u000a</li>\u000a<li>\u000a<p>Built-in interface command line.</p>\u000a</li>\u000a<li>\u000a<p>Supports traditional text-cursor in addition to new commands making it trivial\u000a    to do massive batch operations and use the interface without the\u000a    text-cursor.</p>\u000a</li>\u000a<li>\u000a<p>Filters / sorts in arbitrary, persistently loaded binaries.</p>\u000a</li>\u000a<li>\u000a<p>All around more efficient methods for practically everything.</p>\u000a</li>\u000a</ul>\u000a<p>The basic gist you should take away from this post is that it's time for Canto\u000ato level up.</p>\u000a<ul>\u000a<li>Jack</li>\u000a</ul>
p50
stRp51
sg19
(lp52
g1
(g2
g3
(dp53
g22
Vhttp://codezen.org/canto/news/93
p54
sg11
g24
sg25
g26
stRp55
asg28
V0.7.10 and plans
p56
sS'summary'
p57
V<p>You can grab the 0.7.10 release from the \u000a<a href="http://codezen.org/canto/download/">download</a> page.</p>\u000a<ul>\u000a<li>Add canto-inspect.1 manpage</li>\u000a<li>Fix other manpages</li>\u000a<li>Fix some 2.6 incompatible abuse</li>\u000a<li>Add workaround for bad feed data caused by switching between\u000a    the system feedparser and the builtin.</li>\u000a</ul>\u000a<p>This is basically a maintenance release, mostly thanks to Canto having a new\u000aDebian maintainer (thanks Vincent!). Essentially some immaterial cleanups that\u000awon't make a difference to most. Some better Python practices (particularly\u000astring exceptions that apparently have always been buggy and now are not\u000asupported int 2.6+).</p>\u000a<p>I would like this to be the last 0.7.x release, and thus consider it to be in\u000amaintenance mode. <code>xulos</code> and <code>jaacoppi</code> from IRC still have some nasty bugs,\u000abut try as I might I can't get them to reproduce. Resolving these bugs would be\u000athe only thing that would prompt an 0.7.11 release.</p>\u000a<h3 id="080-plans">0.8.0 Plans</h3>\u000a<p>So, as I've mentioned before, Canto was basically the first piece of Python that\u000aI wrote. I've learned everything I know about Python from building it and every\u000aversion from 0.4.1 to this latest 0.7.10 has been organically grown from the\u000asame codebase.</p>\u000a<p>As a result 0.7.10 is about 30\u005c% a product of the beginner Pythonista I <em>was</em>,\u000a50\u005c% the result of the intermediate Pythonista I came to be not recognizing the\u000apoor design, and 20\u005c% of the expert Pythonista I am now thrashing to salvage\u000aanything.</p>\u000a<p>Now I reached the point where I stopped thrashing, evaluated the codebase on its\u000amerits versus the amount of effort to start again and found that, easily, it\u000amade more sense to start from scratch.</p>\u000a<p>0.7.x evolved into a multi-process monster with <code>canto-fetch</code> flying around in a\u000acronjob. Its insides were twisted around to communicate with a gimpy form of\u000aPython only picklable socket protocol. The dividing line between work that\u000aneeded to be done in the interface and needed to be done in the backend was\u000ablurry and information that needed to cross the boundary ill-defined.</p>\u000a<p>In short, it became a huge mess, but that's what happens when you start with the\u000aidea of threading and (through necessity, thanks to the Python GIL) end-up with\u000aprocesses. Among other bad choices.</p>\u000a<p>0.8.0 rectifies the situation.</p>\u000a<p>Instead of a hideously twisted gimp protocol of 0.7.x, a real, genuine socket\u000aprotocol is being used to communicate with a (<em>gasp!</em>) daemon. Because the\u000adaemon exists, <code>canto-fetch</code> is history. As are slow exits, bouncing CPU usage,\u000aconfusing macro systems, eye glazing Python based configs, pointless lock\u000ahammering on the filesystem, delayed updates, and lost information.</p>\u000a<p>Most of the heavy lifting is done in the daemon, which is properly\u000amulti-threaded such that multiple clients could be running at once and\u000acooperate. Not only that, but because it uses a simple text based protocol\u000a(instead of Python-only pickles), it would be trivial to write a GTK or a Qt\u000abased frontend to canto and still take advantage of its filters, sorts and other\u000aconfiguration all in any language that's smart enough to talk to a socket (read:\u000aall of them).</p>\u000a<p>0.8.0 will be a great simplification.</p>\u000a<h3 id="current-status">Current Status</h3>\u000a<p>As of this writing, I have about half of the server functionality complete and\u000aabout a third (although it's the <em>hard</em> third) of the client done. Neither are\u000aup yet for public consumption, but as soon as I start giving IRC users alphas,\u000athere will be another post and the project will appear in the usual gitweb.</p>\u000a<p>I'm not sure how long it will take for that to happen, but I'm hoping to put out\u000athe initial 0.8.0 release before the end of the year (loose enough timeline for\u000ayou?).</p>\u000a<p>A short list of notable changes:</p>\u000a<ul>\u000a<li>\u000a<p>Server / client (as mentioned above).</p>\u000a</li>\u000a<li>\u000a<p>Blocking event-based architecture = 0\u005c% CPU usage when not in use.</p>\u000a</li>\u000a<li>\u000a<p>INI style config, that can be machine manipulated. (Although Python \u000a    extension will be worked in.)</p>\u000a</li>\u000a<li>\u000a<p>Built-in interface command line.</p>\u000a</li>\u000a<li>\u000a<p>Supports traditional text-cursor in addition to new commands making it trivial\u000a    to do massive batch operations and use the interface without the\u000a    text-cursor.</p>\u000a</li>\u000a<li>\u000a<p>Filters / sorts in arbitrary, persistently loaded binaries.</p>\u000a</li>\u000a<li>\u000a<p>All around more efficient methods for practically everything.</p>\u000a</li>\u000a</ul>\u000a<p>The basic gist you should take away from this post is that it's time for Canto\u000ato level up.</p>\u000a<ul>\u000a<li>Jack</li>\u000a</ul>
p58
sS'guidislink'
p59
I00
sS'title_detail'
p60
g1
(g2
g3
(dp61
g9
S'http://codezen.org/canto/feeds/latest'
p62
sg11
S'text/plain'
p63
sg13
Nsg14
g56
stRp64
sg29
g54
sS'canto_state'
p65
(lp66
VCanto RSS
p67
aV*
aS'read'
p68
asS'id'
p69
Vhttp://codezen.org/canto/news/93
p70
stRp71
ag1
(g2
g3
(dp72
S'summary_detail'
p73
g1
(g2
g3
(dp74
g9
S'http://codezen.org/canto/feeds/latest'
p75
sg11
S'text/html'
p76
sg13
Nsg14
V<p>You can grab the 0.7.9 release from the \u000a<a href="http://codezen.org/canto/download/">download</a> page.</p>\u000a<ul>\u000a<li>Fix fresh install sans system feedparser</li>\u000a<li>Make canto-inspect use builtin feedparser</li>\u000a</ul>\u000a<p>Some kinks had to be worked out with the import of feedparser and parts of the\u000acode were still falling back on the system. I am disappointed I haven't heard\u000aback from one of the original reporters so 0.7.10 might be coming sooner rather\u000athan later, but the part of the problem I was able to reproduce locally (and\u000acropped up others' machines) was fixed in this commit.</p>\u000a<p>Have fun! Submit bugs!</p>
p77
stRp78
sg19
(lp79
g1
(g2
g3
(dp80
g22
Vhttp://codezen.org/canto/news/92
p81
sg11
g24
sg25
g26
stRp82
asg28
V0.7.9
p83
sg57
g77
sg59
I00
sS'title_detail'
p84
g1
(g2
g3
(dp85
g9
S'http://codezen.org/canto/feeds/latest'
p86
sg11
S'text/plain'
p87
sg13
Nsg14
g83
stRp88
sg29
g81
sg65
(lp89
VCanto RSS
p90
aV*
aS'read'
p91
asg69
Vhttp://codezen.org/canto/news/92
p92
stRp93
ag1
(g2
g3
(dp94
S'summary_detail'
p95
g1
(g2
g3
(dp96
g9
S'http://codezen.org/canto/feeds/latest'
p97
sg11
S'text/html'
p98
sg13
Nsg14
V<p>You can grab the 0.7.8 release from the \u000a<a href="http://codezen.org/canto/download/">download</a> page.</p>\u000a<ul>\u000a<li>Fix feed exception encoding problem.</li>\u000a<li>Fix occasional zombies / extra pids floating around.</li>\u000a<li>Import feedparser into source tree.</li>\u000a<li>Add -s/--sysfp flag to canto-fetch to fall back on system feedparser</li>\u000a<li>Render improvements by honoring declared content types</li>\u000a</ul>\u000a<h3 id="feedparser">Feedparser</h3>\u000a<p>Hot on the heels of the 0.7.7 release comes 0.7.8. It's been awhile since\u000athere's been a release that's only lasted a week, but in this case it had to\u000ahappen. Why? Feedparser.</p>\u000a<p>I love feedparser. It really makes my life much easier when it comes to getting\u000afeeds. I haven't touched XML with code since I started using it and it's been\u000agreat. What I <em>don't</em> like about feedparser however is that the venerable <a href="http://diveintomark.org">Mark\u000aPilgrim</a> that authored it and maintains it has no time\u000ato fix or integrate fixes for about a million little bugs.</p>\u000a<p>Right now, the Debian version of feedparser (the one I use everyday) has 14\u000apatches against it. Understandable since the last release of feedparser was in\u000aApril 2007. Things are bound to break. Arch has got 5. Gentoo, and I'm sure a\u000alot of other distros have 0. So there are a number of versions floating around\u000aeach with different behavior. I've known about this since Canto started using\u000afeedparser.</p>\u000a<p>Over the last year or so a number of people have submitted bugs about this and\u000athat, and some of them were serious in that they rendered a feed entirely\u000auseless. Like misreporting titles. Or even worse, causing exceptions. Each time\u000aI just told them, "I'm sorry, it's feedparser, talk to your distro's maintainer\u000aabout picking up this patch."</p>\u000a<p>For the most part things were okay like this only because (at least, initially)\u000aI thought mpilgrim was going to step up and feedparser 4.2 would be coming out\u000aand maybe I wouldn't <em>have</em> to resort to importing the source. Then, in the last\u000a<strong>week</strong>, I got two bug reports from two separate people on two different\u000adistros that both came down to feedparser. The clock on 4.1 just passed three\u000ayears and I've had enough. So I grabbed Debian's feedparser and tossed it into\u000athe source.</p>\u000a<p>Now everyone will be on a level playing field and if (or <em>when</em>) someone else\u000areports a bug that traces into feedparser. I can get in there and fix it myself,\u000awithout having to wait on mpilgrim or the distros. Mission accomplished.</p>\u000a<p>I don't foresee problems migrating beyond, perhaps, some items being marked as\u000aunread again because their IDs have changed.</p>\u000a<h3 id="rendering">Rendering</h3>\u000a<p>The other noticeable improvement on this release is the rendering of content\u000athat is explicitly reported as <code>text/plain</code>. Previous to this release, Canto\u000aignored such things and attempted to render basically everything as HTML. It's a\u000astrategy that had served Canto well trying to cope with feeds published by\u000amoronic broken publishers and most of the time <code>text/plain</code> content wasn't\u000achanged in the process. However, this is sort of punishing good feed publishers\u000afor the others' stupidity by messing with the spacing of their content.</p>\u000a<p>In particular, things like plaintext logs and the like would show up as a\u000ajumbled mess even though the feed declared "hey, don't format this."</p>\u000a<p>So, to stop punishing the good guys, Canto honors the type. This <em>may</em> make bad\u000afeeds look like crap, but in that case the user can contact the publisher to\u000acomplain.</p>\u000a<h3 id="077-exception">0.7.7 Exception</h3>\u000a<p>Twice in the short lifespan of 0.7.7 it was reported that Canto excepted on line\u000a289 of <code>process.py</code>. I didn't fix it directly, but I believe that it was fixed\u000aby restoring an accidentally dropped line from 0.7.6. If this isn't the case and\u000ayou see such an exception, please report it.</p>\u000a<h3 id="thanks">Thanks</h3>\u000a<p>Lastly, thanks to <code>jaacoppi</code> (the pidwatcher), <code>evg_krsk</code>, and Caleb for\u000areporting bugs for this release.</p>\u000a<p>Have fun! Submit bugs!</p>
p99
stRp100
sg19
(lp101
g1
(g2
g3
(dp102
g22
Vhttp://codezen.org/canto/news/91
p103
sg11
g24
sg25
g26
stRp104
asg28
V0.7.8
p105
sg57
g99
sg59
I00
sS'title_detail'
p106
g1
(g2
g3
(dp107
g9
S'http://codezen.org/canto/feeds/latest'
p108
sg11
S'text/plain'
p109
sg13
Nsg14
g105
stRp110
sg29
g103
sg65
(lp111
g90
aV*
ag91
asg69
Vhttp://codezen.org/canto/news/91
p112
stRp113
ag1
(g2
g3
(dp114
S'summary_detail'
p115
g1
(g2
g3
(dp116
g9
S'http://codezen.org/canto/feeds/latest'
p117
sg11
S'text/html'
p118
sg13
Nsg14
V<p>You can grab the 0.7.7 release from the \u000a<a href="http://codezen.org/canto/download/">download</a> page.</p>\u000a<ul>\u000a<li>Fix harmless widecurse.c warning</li>\u000a<li>Fix going to locale incompatible URLs</li>\u000a<li>Fix Python 2.6.5 weirdness</li>\u000a<li>Fix enclosure parsing/display exception</li>\u000a<li>Fix set_{filter,tag_filter,sort}(None)</li>\u000a<li>Improved config validation for gui options</li>\u000a<li>Work harder to maintain selections through updates</li>\u000a<li>Make cursor behavior more flexible</li>\u000a<li>Change default cursor behavior</li>\u000a<li>Documentation tweaks (thanks acoolon)</li>\u000a</ul>\u000a<p>Another round of bugfixes. This one tackles some annoyances like occasionally\u000agetting an item with a link with characters that are both not URL-encoded and\u000anot compatible with your system locale. No symptoms other than the link just\u000awouldn't open, which is crappy.</p>\u000a<p>Some exception stuff has been cleaned up, and <code>set_filter</code> and friends now work\u000aproperly when given <code>None</code> as the argument.</p>\u000a<p>The most noticeable change, if you weren't suffering from the previous bugs, is\u000athat the cursor behavior is now configurable. For once I actually completed the\u000aofficial documentation before the release, so you can read about it\u000a<a href="http://codezen.org/canto/config/#cursor-behavior-077">here</a>.</p>\u000a<p>If you want to return to the &lt;0.7.7 default scroll behavior, you can add this\u000aline to your config:</p>\u000a<div class="codehilite"><pre><span class="n">cursor_edge</span> <span class="o">=</span> <span class="mf">0</span>\u000a</pre></div>\u000a\u000a\u000a<p>To cause the interface to scroll at the very edge of the screen, instead of the\u000anew default behavior with a scroll margin of 5 lines.</p>\u000a<p>Have fun! Submit bugs!</p>
p119
stRp120
sg19
(lp121
g1
(g2
g3
(dp122
g22
Vhttp://codezen.org/canto/news/90
p123
sg11
g24
sg25
g26
stRp124
asg28
V0.7.7
p125
sg57
g119
sg59
I00
sS'title_detail'
p126
g1
(g2
g3
(dp127
g9
S'http://codezen.org/canto/feeds/latest'
p128
sg11
S'text/plain'
p129
sg13
Nsg14
g125
stRp130
sg29
g123
sg65
(lp131
g90
aV*
ag91
asg69
Vhttp://codezen.org/canto/news/90
p132
stRp133
ag1
(g2
g3
(dp134
S'summary_detail'
p135
g1
(g2
g3
(dp136
g9
S'http://codezen.org/canto/feeds/latest'
p137
sg11
S'text/html'
p138
sg13
Nsg14
V<p>Just a note, I updated the <a href="http://codezen.org/canto/config/">configuration page</a> with the content of\u000athe 0.7.6 announcement. I also updated the getting started page with some\u000aoverall <a href="http://codezen.org/canto/start/#tips">tips</a> about using Canto effectively.</p>\u000a<p>Lastly, if you've been a Canto user since the days of yore, you'll remember the\u000aAdvanced Configuration page that used to be up, but was taken down for the 0.7.0\u000arelease (since that release made the entire thing obsolete, essentially). Well,\u000ait's back in action and updated for 0.7.6. This page covers more\u000aprogrammer-centric configuration of Canto, geared towards things like writing\u000ayour own drawing hooks, general hooks, filters, sorts, etc.</p>\u000a<p>You can see the new page here: <a href="http://codezen.org/canto/advconfig">Advanced Configuration</a>.</p>
p139
stRp140
sg19
(lp141
g1
(g2
g3
(dp142
g22
Vhttp://codezen.org/canto/news/89
p143
sg11
g24
sg25
g26
stRp144
asg28
VDocs Updated
p145
sg57
g139
sg59
I00
sS'title_detail'
p146
g1
(g2
g3
(dp147
g9
S'http://codezen.org/canto/feeds/latest'
p148
sg11
S'text/plain'
p149
sg13
Nsg14
g145
stRp150
sg29
g143
sg65
(lp151
g90
aV*
ag91
asg69
Vhttp://codezen.org/canto/news/89
p152
stRp153
asS'canto_update'
p154
F1284903476.4030941
sS'headers'
p155
(dp156
S'content-length'
p157
S'15212'
p158
sS'accept-ranges'
p159
S'bytes'
p160
sS'server'
p161
S'Apache/2.2.9 (Debian) DAV/2 SVN/1.5.1 PHP/5.2.6-1+lenny8 with Suhosin-Patch mod_python/3.3.1 Python/2.5.2 mod_ssl/2.2.9 OpenSSL/0.9.8o mod_wsgi/2.5 Phusion_Passenger/2.2.11 mod_perl/2.0.4 Perl/v5.10.0'
p162
sS'last-modified'
p163
S'Tue, 27 Jul 2010 19:32:42 GMT'
p164
sS'connection'
p165
S'close'
p166
sS'etag'
p167
S'"29f00e-3b6c-48c6390924a80"'
p168
sS'date'
p169
S'Sun, 19 Sep 2010 13:37:56 GMT'
p170
sS'content-type'
p171
S'application/xml'
p172
ssg22
S'http://codezen.org/canto/feeds/latest'
p173
sS'version'
p174
S'rss20'
p175
sg65
(lp176
sS'etag'
p177
g168
sS'namespaces'
p178
(dp179
sS'canto_version'
p180
(I0
I7
I10
tp181
stRp182
.